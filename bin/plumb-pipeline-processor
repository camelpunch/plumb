#!/usr/bin/env ruby

require 'json'
require_relative '../lib/plumb/factories/queue_factory'
require_relative '../lib/plumb/pipeline'

module Plumb
  module PipelineProcessor
    class << self
      def call
        factory = QueueFactory.new(JSON.parse(File.read(ARGV[0])))

        Pipeline.new(
          order: job_order,
          waiting_queue: factory.waiting_queue,
          job_repository: factory.job_repository
        ).run
      end

      private

      def job_order
        steps.map {|step|
          step.map {|job_data|
            Job.new(
              name: job_data['name'],
              repository_url: job_data['repository_url'],
              script: job_data['script'],
            )
          }
        }
      end

      def steps
        options['order']
      end

      def options
        @options ||= JSON.parse($stdin.read)
      end
    end
  end
end
Plumb::PipelineProcessor.call
